// Na linguagem JavaScript, temos tr√™s principais operadores l√≥gicos: && , || e o ! . Podemos nos referir a eles como "AND", "OR" e "NOT", respectivamente.

// Operador AND (&&)
// Esse operador √© bin√°rio. O que significa que ele precisa de dois elementos para funcionar corretamente.

// 1.Crie uma constante chamada "currentHour" que recebe um n√∫mero entre 4 e 24 de sua escolha, para representar as horas do dia.
    const currentHour = 13.59;

// 2.Crie uma vari√°vel chamada "message" que, inicialmente, √© uma string vazia.
    let message = "";

// 3. Implemente condicionais para que:
// Se o hor√°rio for maior ou igual a 22, insira "N√£o dever√≠amos comer nada, √© hora de dormir" na vari√°vel "message".
// Se o hor√°rio for maior ou igual a 18 e menor que 22, insira "Rango da noite, vamos jantar :D" na vari√°vel "message".
// Se o hor√°rio for maior ou igual a 14 e menor que 18, insira "Vamos fazer um bolo pro caf√© da tarde?" na vari√°vel "message".
// Se o hor√°rio estiver entre 11 e 14, insira "Hora do almo√ßo!!!" na vari√°vel "message".
// Se o hor√°rio estiver entre 4 e 11, insira "Hmmm, cheiro de caf√© rec√©m passado" na vari√°vel "message".

if(currentHour >= 22){
    message = ('N√£o dever√≠amos comer nada, √© hora de dormir');
} else if(currentHour >= 18 && currentHour < 22){
    message = ('Rango da noite, vamos jantar :D');
} else if(currentHour >= 14 && currentHour < 18){
    message = ('Vamos fazer um bolo pro caf√© da tarde?');
} else if(currentHour > 11 && currentHour < 14){
    message = ('Hora do almo√ßo!!!');
} else {
    message = ('Hmmm, cheiro de caf√© rec√©m passado')
}

// 4.Agora imprima a vari√°vel message fora das suas condi√ß√µes.
console.log(message);

// Operador OR

// 1.Crie uma vari√°vel chamada "weekDay" que recebe a string "quarta-feira".

    let weekDay = 'sabado';

// 2.Implemente condicionais para que:
// Se nossa vari√°vel "weekDay" for "segunda-feira", "ter√ßa-feira", "quarta-feira", "quinta-feira" ou "sexta-feira", imprima "Oba, mais um dia de aprendizado na Trybe >:D".
// Se for algum dia de fim de semana, imprima "FINALMENTE, descanso merecido UwU".
// Experimente trocar o valor da string ou at√© mesmo montar seu pr√≥prio algoritmo. Esse assunto √© muito importante para seu aprendizado :).

    if(weekDay == "segunda-feira" || weekDay == "ter√ßa-feira" || weekDay == "quarta-feira" || weekDay == "quinta-feira" || weekDay == "sexta-feira"){
        console.log("Oba, mais um dia de aprendizado na Trybe >:D");
    } else {
        console.log("FINALMENTE, descanso merecido UwU");
    }

// Operador NOT

// Vamos iniciar com um exemplo do que o NOT √© capaz, voc√™ consegue prever o que esse c√≥digo vai imprimir?
  console.log((2 + 2) === 4);
// Isso aqui deve nos retornar true , n√£o √©? Afinal, 2 + 2 resultar em 4 √© uma declara√ß√£o verdadeira. Agora, se adicionarmos o operador NOT antes dessa declara√ß√£o?

// Se voc√™ executar esse c√≥digo, vai perceber que o valor impresso √© o oposto do anterior. ü§î
console.log(!(2 + 2) === 4);
// Ele pode inverter o valor booleano de um elemento. Isso mesmo!! Se tivermos uma vari√°vel ou valor considerado true , podemos gerar o resultado oposto simplesmente fazendo !vari√°vel . Ou seja, false .

console.log(!42); // false

console.log(!0); // true
// O n√∫mero 0 tem o valor "falsy" no javascript. Logo, seu oposto √© true.